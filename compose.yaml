services:
  arangodb:
    image: arangodb

  db:
    image: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: python_bells
      POSTGRES_USER: python_bells
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U python_bells"]
      interval: 1s
      timeout: 5s
      retries: 10

    secrets:
      - postgres_password

  rabbitmq:
    image: rabbitmq

  redis:
    image: redis

  celery-worker:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    depends_on:
      - rabbitmq
      - redis

  web:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    environment:
      HOST: "db"
    depends_on:
      db:
        condition: service_healthy
        restart: true
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
      vite:
        condition: service_started

volumes:
  db-data:
  static_volume:

# develop options use copying to the container volume
#    develop:
#      watch:
#        - action: sync
#          path: .
#          target: /code/app
#          ignore:
#            - node_modules

secrets:
  postgres_password:
    file: ./etc/postgres.txt
