services:
#  celery_worker:
#    build:
#      context: .

  db:
    image: postgres
    restart: always
    volumes:
      - ./var/data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: python_bells
      POSTGRES_USER: python_bells
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    # Ports need to be exposed for dev manage.py commands
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U python_bells"]
      interval: 1s
      timeout: 5s
      retries: 10

    secrets:
      - postgres_password

  rabbitmq:
    image: rabbitmq
#    volumes:
#      - rabbitmq.conf:/etc/rabbitmq.rabbitmq.conf

  redis:
    image: redis
    ports:
      - "6379:6379"

  vite:
    build:
      context: .
      dockerfile: vite.Dockerfile
    volumes:
      - /code/node_modules/
      - .:/code
    ports:
      - "1234:1234"

  web:
    build:
      context: .
      additional_contexts:
        # If building from local, editable source:
        django_base: ../django_base
    entrypoint: /entrypoint.sh
    environment:
      HOST: "db"
    volumes:
      - /code/node_modules
      - .:/code/app:ro
      - ../django_base:/code/django_base:ro
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
        restart: true
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
      vite:
        condition: service_started

# develop options use copying to the container volume
#    develop:
#      watch:
#        - action: sync
#          path: .
#          target: /code/app
#          ignore:
#            - node_modules

secrets:
  postgres_password:
    file: ./etc/postgres.txt
